% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tf.R
\name{tf_cond}
\alias{tf_cond}
\title{tf.cond}
\usage{
tf_cond(cond, true_fn, false_fn, name = NULL)
}
\arguments{
\item{cond}{R logical or a tensor.}

\item{true_fn, false_fn}{a `~` function, or something coercable to a function
via `as.function`}

\item{name}{a string, passed on to `tf.cond()`}
}
\value{
if cond is a tensor, then the result of `tf.cond()`. Otherwise, if
  `cond` is an `EagerTensor` or an R logical, then the result of either
  `true_fn()` or `false_fn()`
}
\description{
This is a minimal wrapper around `tf$cond()` that allows you to supply
`true_fn` and `false_fn` as lambda functions defined using the tilde `~`.
}
\examples{
## square if positive
# using tf$cond directly:
function(x) tf$cond(x > 0, function() x * x, function() x)

# using tf_cond() wrapper
function(x) tf_cond(x > 0, ~ x * x, ~ x)
}
